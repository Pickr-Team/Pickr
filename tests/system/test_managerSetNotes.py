# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium_test import SeleniumTest
from selenium.webdriver.support import expected_conditions as EC


class TestManagerSetNotes(SeleniumTest):
    """
    This test method tests the manager's ability to set notes

    1. The manager logs in
    2. The manager sets the notes
    3. The manager logs out
    """

    def test_managerSetNotes(self):
        new_note_btn = self.driver.find_element(By.LINK_TEXT, "+ New Note")
        self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", new_note_btn)
        time.sleep(1)
        new_note_btn.click()
        time.sleep(1)
        self.driver.find_element(By.ID, "title").click()
        time.sleep(1)
        self.driver.find_element(By.ID, "title").send_keys("test title")
        self.driver.find_element(By.ID, "content").click()
        self.driver.find_element(By.ID, "content").send_keys("test content")
        time.sleep(1)
        submit_btn = self.driver.find_element(By.CSS_SELECTOR, ".submit-button")
        self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", submit_btn)
        time.sleep(1)
        submit_btn.click()
        time.sleep(1)
        edit_btn = self.driver.find_element(By.LINK_TEXT, "Edit")
        self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", edit_btn)
        time.sleep(1)
        edit_btn.click()
        time.sleep(1)
        self.driver.find_element(By.ID, "title").click()
        time.sleep(1)
        self.driver.find_element(By.ID, "title").send_keys("test title 1")
        time.sleep(1)
        self.driver.find_element(By.ID, "content").click()
        time.sleep(1)
        self.driver.find_element(By.ID, "content").send_keys("test content1")
        time.sleep(1)
        submit_btn = self.driver.find_element(By.CSS_SELECTOR, ".submit-button")
        self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", submit_btn)
        time.sleep(1)
        submit_btn.click()
        time.sleep(1)
        del_btn = self.driver.find_element(By.CSS_SELECTOR, "button.del-btn[data-note-id]")
        self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", del_btn)
        time.sleep(1)
        del_btn.click()
        time.sleep(1)
        self.driver.find_element(By.CSS_SELECTOR, ".modal-footer button.btn-danger").click()
        time.sleep(1)
        # TODO
        # assert self.driver.find_element(By.ID, "secondConfirmModal-body").text == 'Delete Successfully'
        self.driver.find_element(By.ID, "ok-btn").click()
        time.sleep(1)
