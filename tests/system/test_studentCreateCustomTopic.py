# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium_test import SeleniumTest


class TestStudentCreateCustomTopic(SeleniumTest):
    """
    This test method tests the student's ability to create a custom topic

    1. The student logs in
    2. The student creates a custom topic
    3. The student logs out
    """

    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_studentCreateCustomTopic(self):
        self.driver.get("http://127.0.0.1:8000?test_name=student_select_topics")
        self.driver.find_element(By.LINK_TEXT, "My Pickr↗").click()
        self.driver.find_element(By.ID, "user_name").click()
        self.driver.find_element(By.ID, "user_name").send_keys("202018020317")
        self.driver.find_element(By.ID, "password").click()
        self.driver.find_element(By.ID, "password").send_keys("123456")
        self.driver.find_element(By.CSS_SELECTOR, ".submit-button").click()
        time.sleep(1)
        self.driver.find_element(By.ID, "check_box_note").click()
        self.driver.find_element(By.ID, "custom_topic_name").click()
        self.driver.find_element(By.ID, "custom_topic_name").send_keys("test custom topic")
        self.driver.find_element(By.ID, "supervisor_id").click()
        dropdown = self.driver.find_element(By.ID, "supervisor_id")
        dropdown.find_element(By.XPATH, "//option[. = 'first_name3 last_name3']").click()
        self.driver.find_element(By.ID, "type_id").click()
        dropdown = self.driver.find_element(By.ID, "type_id")
        dropdown.find_element(By.XPATH, "//option[. = 'type2']").click()
        self.driver.find_element(By.ID, "field-2").click()
        self.driver.find_element(By.ID, "field-2").send_keys("test")
        self.driver.find_element(By.ID, "customFormSubmit").click()
        time.sleep(1)
        self.driver.find_element(By.ID, "customFormSubmit").click()
        time.sleep(1)
        self.driver.find_element(By.NAME, "choose1").click()
        self.driver.find_element(By.NAME, "choose1").send_keys("1")
        self.driver.find_element(By.NAME, "choose1").send_keys(Keys.ENTER)
        time.sleep(1)
        self.driver.find_element(By.NAME, "choose2").click()
        self.driver.find_element(By.NAME, "choose2").send_keys("2")
        self.driver.find_element(By.NAME, "choose2").send_keys(Keys.ENTER)
        time.sleep(1)
        self.driver.find_element(By.NAME, "choose3").click()
        self.driver.find_element(By.NAME, "choose3").send_keys("3")
        self.driver.find_element(By.NAME, "choose3").send_keys(Keys.ENTER)
        time.sleep(1)
        self.driver.find_element(By.ID, "check_box_note").click()
        self.driver.find_element(By.ID, "custom_topic_name").click()
        self.driver.find_element(By.ID, "custom_topic_name").send_keys("custom topic 2")
        self.driver.find_element(By.ID, "supervisor_id").click()
        dropdown = self.driver.find_element(By.ID, "supervisor_id")
        dropdown.find_element(By.XPATH, "//option[. = 'first_name1 last_name1']").click()
        self.driver.find_element(By.ID, "type_id").click()
        dropdown = self.driver.find_element(By.ID, "type_id")
        dropdown.find_element(By.XPATH, "//option[. = 'type2']").click()
        self.driver.find_element(By.ID, "field-2").click()
        self.driver.find_element(By.ID, "field-2").send_keys("test")
        time.sleep(1)
        self.driver.find_element(By.ID, "customFormSubmit").click()
        time.sleep(1)
        self.driver.find_element(By.ID, "customFormSubmit").click()
        time.sleep(2)
        self.driver.execute_script("window.scrollTo(0,0)")
        self.driver.find_element(By.XPATH, "//em[contains(.,\'Logout↗\')]").click()